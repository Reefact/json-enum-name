# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- test-ci

pool:
  vmImage: 'windows-latest'

variables:
- group: LatestPackageVersions
- name: solution
  value: '**/*.sln'
- name: buildPlatform
  value: 'Any CPU'
- name: buildConfiguration
  value: 'Release'

steps:

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
              latestVersion=$(7_x_x)
              nuspecVersion=$(sed -n 's/.*<version>\(.*\)<\/version>.*/\1/p' Reefact.JsonEnumValueBinding.nuspec)
             
              echo "Latest version = $latestVersion"
              echo "Nuspec version = $nuspecVersion"

              result=$(pwsh -File "Check-Version.ps1" -latestVersion "$latestVersion" -nuspecVersion "$nuspecVersion")

              if [ -z "$result" ]; then
                  echo "New nuspec version is valid."
                  az pipelines variable-group variable update --group-id "LatestPackageVersions" --name "7_x_x" --value $nuspecVersion --organization https://dev.azure.com/Reefact
              else
                  echo $result;
                  exit 1
              fi

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.nuspec'
    versioningScheme: 'off'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
